# AUTOGENERATED! DO NOT EDIT! File to edit: 202_configs.ipynb (unless otherwise specified).

__all__ = ['write_config', 'read_config']

# Cell
import json
from pathlib import Path

# Cell
def write_config(config, config_fn='config.json', overwrite=False):
    '''write a column configuration to json'''

    if not Path(config_fn).is_file():
        print(f'{config_fn} does not exist, creating new config_dict')
        config_dict={}
    else:
        with open(config_fn, 'r') as f:
            config_dict=json.load(f)


    if config['id'] in config_dict.keys() and not overwrite:
        print(f'config with id {config["id"]} already stored, use overwrite=True for overwriting')
        return

    config_dict[config['id']] = config

    with open(config_fn, 'w+') as f:
        json.dump(config_dict, f)

# Cell
def read_config(conf_id, config_fn='config_json'):
    with open(config_fn, 'r') as f:
        config_dict=json.load(f)
    try:
        col_config = config_dict[conf_id]
    except:
        print(f'could not load config with id {conf_id}')
    return col_config
