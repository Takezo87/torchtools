# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"test": "00_core.ipynb",
         "leaky_loss": "00_core.ipynb",
         "leaky_loss_2d": "00_core.ipynb",
         "unweighted_profit": "00_core.ipynb",
         "unweighted_profit_05": "00_core.ipynb",
         "weighted_profit": "00_core.ipynb",
         "get_loss_fn": "00_core.ipynb",
         "is_array": "00_core.ipynb",
         "listify": "00_core.ipynb",
         "FixedSplitter": "00_core.ipynb",
         "TSSplitter": "00_core.ipynb",
         "noop": "01_models.ipynb",
         "shortcut": "01_models.ipynb",
         "Inception": "01_models.ipynb",
         "InceptionBlock": "01_models.ipynb",
         "InceptionTime": "01_models.ipynb",
         "Sigmoid": "01_models.ipynb",
         "InceptionTimeSgmOld": "01_models.ipynb",
         "InceptionTimeSgm": "01_models.ipynb",
         "InceptionTimeD": "01_models.ipynb",
         "InceptionTime_NH": "01_models.ipynb",
         "InceptionTimeD_Mixed": "01_models.ipynb",
         "InceptionTimeVar": "01_models.ipynb",
         "nll_regression": "01_models.ipynb",
         "nll_leaky_loss": "01_models.ipynb",
         "qd_loss": "01_models.ipynb",
         "InceptionTimeBounds": "01_models.ipynb",
         "plot_ts": "10_data.ipynb",
         "TSItem": "10_data.ipynb",
         "TSTensor": "10_data.ipynb",
         "TensorFloat": "10_data.ipynb",
         "plot_ts_int": "10_data.ipynb",
         "TSIntTensor": "10_data.ipynb",
         "noise_from_random_curve": "120_augmentations.ipynb",
         "noise_from_normal": "120_augmentations.ipynb",
         "distort_time": "120_augmentations.ipynb",
         "AugTransform": "120_augmentations.ipynb",
         "YWarp": "120_augmentations.ipynb",
         "YNormal": "120_augmentations.ipynb",
         "YNormalMul": "120_augmentations.ipynb",
         "YScale": "120_augmentations.ipynb",
         "YScaleChannel": "120_augmentations.ipynb",
         "TimeWarp": "120_augmentations.ipynb",
         "TimeNormal": "120_augmentations.ipynb",
         "encodes": "120_augmentations.ipynb",
         "all_noise_augs": "120_augmentations.ipynb",
         "Zoomin": "120_augmentations.ipynb",
         "Zoomout": "120_augmentations.ipynb",
         "RandZoom": "120_augmentations.ipynb",
         "RandTimesteps": "120_augmentations.ipynb",
         "all_zoom_augs": "120_augmentations.ipynb",
         "TimestepZero": "120_augmentations.ipynb",
         "TimestepMean": "120_augmentations.ipynb",
         "Cutout": "120_augmentations.ipynb",
         "Crop": "120_augmentations.ipynb",
         "RandomCrop": "120_augmentations.ipynb",
         "CenterCrop": "120_augmentations.ipynb",
         "Maskout": "120_augmentations.ipynb",
         "Dimout": "120_augmentations.ipynb",
         "CutoutMean": "120_augmentations.ipynb",
         "CenterCropMean": "120_augmentations.ipynb",
         "all_erasing_augs": "120_augmentations.ipynb",
         "all_augs": "120_augmentations.ipynb",
         "RandAugment": "120_augmentations.ipynb",
         "Augmix": "120_augmentations.ipynb",
         "AugmixSS": "120_augmentations.ipynb",
         "df_fn": "200_experiments.ipynb",
         "df_dir": "200_experiments.ipynb",
         "df_path": "200_experiments.ipynb",
         "trn_end": "200_experiments.ipynb",
         "val_end": "200_experiments.ipynb",
         "test_end": "200_experiments.ipynb",
         "splits": "200_experiments.ipynb",
         "df_config": "200_experiments.ipynb",
         "col_config": "200_experiments.ipynb",
         "df_source": "200_experiments.ipynb",
         "dataset_name": "200_experiments.ipynb",
         "data_params": "200_experiments.ipynb",
         "emb_sz_rule": "200_experiments.ipynb",
         "get_emb_sz": "200_experiments.ipynb",
         "get_dls": "200_experiments.ipynb",
         "run_training": "200_experiments.ipynb",
         "arch": "200_experiments.ipynb",
         "n_epochs": "200_experiments.ipynb",
         "max_lr": "200_experiments.ipynb",
         "wd": "200_experiments.ipynb",
         "loss_fn_name": "200_experiments.ipynb",
         "alpha": "200_experiments.ipynb",
         "metrics": "200_experiments.ipynb",
         "N": "200_experiments.ipynb",
         "magnitude": "200_experiments.ipynb",
         "seed": "200_experiments.ipynb",
         "pct_start": "200_experiments.ipynb",
         "div_factor": "200_experiments.ipynb",
         "aug": "200_experiments.ipynb",
         "train_params": "200_experiments.ipynb",
         "get_recorder_dict": "200_experiments.ipynb",
         "TSExperiments": "200_experiments.ipynb",
         "build_data_params": "200_experiments.ipynb",
         "main": "200_experiments.ipynb",
         "COL_CONFIG": "200_experiments.ipynb",
         "ISCOLAB": "202_colab.ipynb",
         "write_config": "202_configs.ipynb",
         "delete_config": "202_configs.ipynb",
         "read_config": "202_configs.ipynb",
         "config_keys": "202_configs.ipynb",
         "get_simple_config": "30_datasets.ipynb",
         "get_discrete_config": "202_configs.ipynb",
         "To3dArray": "30_datasets.ipynb",
         "ToArray": "30_datasets.ipynb",
         "decompress_from_url": "30_datasets.ipynb",
         "get_UCR_univariate_list": "30_datasets.ipynb",
         "get_UCR_multivariate_list": "30_datasets.ipynb",
         "get_UCR_univariate": "30_datasets.ipynb",
         "get_UCR_multivariate": "30_datasets.ipynb",
         "get_UCR_data": "30_datasets.ipynb",
         "ucr_to_items": "30_datasets.ipynb",
         "items_from_df": "30_datasets.ipynb",
         "cats_from_df": "30_datasets.ipynb",
         "cpus": "60_dataloader.ipynb",
         "device": "60_dataloader.ipynb",
         "bytes2GB": "60_dataloader.ipynb",
         "totensor": "60_dataloader.ipynb",
         "toarray": "60_dataloader.ipynb",
         "to3dtensor": "60_dataloader.ipynb",
         "to2dtensor": "60_dataloader.ipynb",
         "to1dtensor": "60_dataloader.ipynb",
         "to3darray": "60_dataloader.ipynb",
         "to2darray": "60_dataloader.ipynb",
         "to1darray": "60_dataloader.ipynb",
         "to3d": "60_dataloader.ipynb",
         "to2d": "60_dataloader.ipynb",
         "to1d": "60_dataloader.ipynb",
         "to2dPlus": "60_dataloader.ipynb",
         "to3dPlus": "60_dataloader.ipynb",
         "to2dPlusTensor": "60_dataloader.ipynb",
         "to2dPlusArray": "60_dataloader.ipynb",
         "to3dPlusTensor": "60_dataloader.ipynb",
         "to3dPlusArray": "60_dataloader.ipynb",
         "Todtype": "60_dataloader.ipynb",
         "itemify": "60_dataloader.ipynb",
         "ifnoneelse": "60_dataloader.ipynb",
         "cycle_dl": "60_dataloader.ipynb",
         "stack": "60_dataloader.ipynb",
         "NumpyTensor": "60_dataloader.ipynb",
         "NumpyDatasets": "60_dataloader.ipynb",
         "TSDatasets3": "60_dataloader.ipynb",
         "TSDatasets4": "60_dataloader.ipynb",
         "NumpyTensorBlock": "60_dataloader.ipynb",
         "TSTensorBlock": "60_dataloader.ipynb",
         "NumpyDataLoader": "60_dataloader.ipynb",
         "show_tuple": "60_dataloader.ipynb",
         "TSDataLoader": "60_dataloader.ipynb",
         "NumpyDataLoaders": "60_dataloader.ipynb",
         "TSDataLoaders": "60_dataloader.ipynb",
         "TSStandardize": "60_dataloader.ipynb",
         "torch.Tensor.mul_min": "60_dataloader.ipynb",
         "TSTensor.mul_min": "60_dataloader.ipynb",
         "NumpyTensor.mul_min": "60_dataloader.ipynb",
         "torch.Tensor.mul_max": "60_dataloader.ipynb",
         "TSTensor.mul_max": "60_dataloader.ipynb",
         "NumpyTensor.mul_max": "60_dataloader.ipynb",
         "TSNormalize": "60_dataloader.ipynb",
         "items_to_arrays": "60_dataloader.ipynb"}

modules = ["core.py",
           "models.py",
           "data.py",
           "augmentations.py",
           "experiments.py",
           "colab.py",
           "configs.py",
           "datasets.py",
           "dataloader.py"]

doc_url = "https://Takezo87.github.io/torchtools/"

git_url = "https://github.com/Takezo87/torchtools/tree/master/"

def custom_doc_links(name): return None